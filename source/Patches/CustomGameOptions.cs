using TownOfUs.CrewmateRoles.MedicMod;
using TownOfUs.CustomOption;
using TownOfUs.NeutralRoles.ExecutionerMod;
using TownOfUs.CrewmateRoles.HaunterMod;
using TownOfUs.CrewmateRoles.MediumMod;
using TownOfUs.CrewmateRoles.VampireHunterMod;
using TownOfUs.NeutralRoles.GuardianAngelMod;
using UnityEngine;

namespace TownOfUs
{
    public enum DisableSkipButtonMeetings
    {
        No,
        Emergency,
        Always
    }
    public enum GameMode
    {
        Classic,
        AllAny,
        KillingOnly,
        Cultist,
        All
    }
    public enum AdminDeadPlayers
    {
        Nobody,
        Spy,
        EveryoneButSpy,
        Everyone
    }
    public static class CustomGameOptions
    {
        public static int MayorOn => Mathf.RoundToInt(Generate.MayorOn.GetFloat());
        public static int JesterOn => Mathf.RoundToInt(Generate.JesterOn.GetFloat());
        public static int SheriffOn => Mathf.RoundToInt(Generate.SheriffOn.GetFloat());
        public static int JanitorOn => Mathf.RoundToInt(Generate.JanitorOn.GetFloat());
        public static int EngineerOn => Mathf.RoundToInt(Generate.EngineerOn.GetFloat());
        public static int SwapperOn => Mathf.RoundToInt(Generate.SwapperOn.GetFloat());
        public static int AmnesiacOn => Mathf.RoundToInt(Generate.AmnesiacOn.GetFloat());
        public static int InvestigatorOn => Mathf.RoundToInt(Generate.InvestigatorOn.GetFloat());
        public static int MedicOn => Mathf.RoundToInt(Generate.MedicOn.GetFloat());
        public static int SeerOn => Mathf.RoundToInt(Generate.SeerOn.GetFloat());
        public static int GlitchOn => Mathf.RoundToInt(Generate.GlitchOn.GetFloat());
        public static int MorphlingOn => Mathf.RoundToInt(Generate.MorphlingOn.GetFloat());
        public static int ExecutionerOn => Mathf.RoundToInt(Generate.ExecutionerOn.GetFloat());
        public static int SpyOn => Mathf.RoundToInt(Generate.SpyOn.GetFloat());
        public static int SnitchOn => Mathf.RoundToInt(Generate.SnitchOn.GetFloat());
        public static int MinerOn => Mathf.RoundToInt(Generate.MinerOn.GetFloat());
        public static int SwooperOn => Mathf.RoundToInt(Generate.SwooperOn.GetFloat());
        public static int ArsonistOn => Mathf.RoundToInt(Generate.ArsonistOn.GetFloat());
        public static int AltruistOn => Mathf.RoundToInt(Generate.AltruistOn.GetFloat());
        public static int UndertakerOn => Mathf.RoundToInt(Generate.UndertakerOn.GetFloat());
        public static int PhantomOn => Mathf.RoundToInt(Generate.PhantomOn.GetFloat());
        public static int VigilanteOn => Mathf.RoundToInt(Generate.VigilanteOn.GetFloat());
        public static int HaunterOn => Mathf.RoundToInt(Generate.HaunterOn.GetFloat());
        public static int GrenadierOn => Mathf.RoundToInt(Generate.GrenadierOn.GetFloat());
        public static int VeteranOn => Mathf.RoundToInt(Generate.VeteranOn.GetFloat());
        public static int TrackerOn => Mathf.RoundToInt(Generate.TrackerOn.GetFloat());
        public static int TrapperOn => Mathf.RoundToInt(Generate.TrapperOn.GetFloat());
        public static int TraitorOn => Mathf.RoundToInt(Generate.TraitorOn.GetFloat());
        public static int TransporterOn => Mathf.RoundToInt(Generate.TransporterOn.GetFloat());
        public static int MediumOn => Mathf.RoundToInt(Generate.MediumOn.GetFloat());
        public static int SurvivorOn => Mathf.RoundToInt(Generate.SurvivorOn.GetFloat());
        public static int GuardianAngelOn => Mathf.RoundToInt(Generate.GuardianAngelOn.GetFloat());
        public static int MysticOn => Mathf.RoundToInt(Generate.MysticOn.GetFloat());
        public static int BlackmailerOn => Mathf.RoundToInt(Generate.BlackmailerOn.GetFloat());
        public static int PlaguebearerOn => Mathf.RoundToInt(Generate.PlaguebearerOn.GetFloat());
        public static int WerewolfOn => Mathf.RoundToInt(Generate.WerewolfOn.GetFloat());
        public static int DetectiveOn => Mathf.RoundToInt(Generate.DetectiveOn.GetFloat());
        public static int EscapistOn => Mathf.RoundToInt(Generate.EscapistOn.GetFloat());
        public static int ImitatorOn => Mathf.RoundToInt(Generate.ImitatorOn.GetFloat());
        public static int BomberOn => Mathf.RoundToInt(Generate.BomberOn.GetFloat());
        public static int DoomsayerOn => Mathf.RoundToInt(Generate.DoomsayerOn.GetFloat());
        public static int VampireOn => Mathf.RoundToInt(Generate.VampireOn.GetFloat());
        public static int VampireHunterOn => Mathf.RoundToInt(Generate.VampireHunterOn.GetFloat());
        public static int ProsecutorOn => Mathf.RoundToInt(Generate.ProsecutorOn.GetFloat());
        public static int WarlockOn => Mathf.RoundToInt(Generate.WarlockOn.GetFloat());
        public static int OracleOn => Mathf.RoundToInt(Generate.OracleOn.GetFloat());
        public static int VenererOn => Mathf.RoundToInt(Generate.VenererOn.GetFloat());
        public static int AurialOn => Mathf.RoundToInt(Generate.AurialOn.GetFloat());
        public static int TorchOn => Mathf.RoundToInt(Generate.TorchOn.GetFloat());
        public static int DiseasedOn => Mathf.RoundToInt(Generate.DiseasedOn.GetFloat());
        public static int FlashOn => Mathf.RoundToInt(Generate.FlashOn.GetFloat());
        public static int TiebreakerOn => Mathf.RoundToInt(Generate.TiebreakerOn.GetFloat());
        public static int GiantOn => Mathf.RoundToInt(Generate.GiantOn.GetFloat());
        public static int ButtonBarryOn => Mathf.RoundToInt(Generate.ButtonBarryOn.GetFloat());
        public static int BaitOn => Mathf.RoundToInt(Generate.BaitOn.GetFloat());
        public static int LoversOn => Mathf.RoundToInt(Generate.LoversOn.GetFloat());
        public static int SleuthOn => Mathf.RoundToInt(Generate.SleuthOn.GetFloat());
        public static int AftermathOn => Mathf.RoundToInt(Generate.AftermathOn.GetFloat());
        public static int RadarOn => Mathf.RoundToInt(Generate.RadarOn.GetFloat());
        public static int DisperserOn => Mathf.RoundToInt(Generate.DisperserOn.GetFloat());
        public static int MultitaskerOn => Mathf.RoundToInt(Generate.MultitaskerOn.GetFloat());
        public static int DoubleShotOn => Mathf.RoundToInt(Generate.DoubleShotOn.GetFloat());
        public static int UnderdogOn => Mathf.RoundToInt(Generate.UnderdogOn.GetFloat());
        public static int FrostyOn => Mathf.RoundToInt(Generate.FrostyOn.GetFloat());
        public static float InitialCooldowns => Generate.InitialCooldowns.GetFloat();
        public static bool NeutralEvilWinEndsGame => Generate.NeutralEvilWinEndsGame.GetBool();
        public static bool PhantomSpook => Generate.PhantomSpook.GetBool();
        public static bool JesterHaunt => Generate.JesterHaunt.GetBool();
        public static bool ExecutionerTorment => Generate.ExecutionerTorment.GetBool();
        public static bool BothLoversDie => Generate.BothLoversDie.GetBool();
        public static bool NeutralLovers => Generate.NeutralLovers.GetBool();
        public static bool SheriffKillOther => Generate.SheriffKillOther.GetBool();
        public static bool SheriffKillsDoomsayer => Generate.SheriffKillsDoomsayer.GetBool();
        public static bool SheriffKillsExecutioner => Generate.SheriffKillsExecutioner.GetBool();
        public static bool SheriffKillsJester => Generate.SheriffKillsJester.GetBool();
        public static bool SheriffKillsArsonist => Generate.SheriffKillsArsonist.GetBool();
        public static bool SheriffKillsJuggernaut => Generate.SheriffKillsJuggernaut.GetBool();
        public static bool SheriffKillsPlaguebearer => Generate.SheriffKillsPlaguebearer.GetBool();
        public static bool SheriffKillsGlitch => Generate.SheriffKillsGlitch.GetBool();
        public static bool SheriffKillsVampire => Generate.SheriffKillsVampire.GetBool();
        public static bool SheriffKillsWerewolf => Generate.SheriffKillsWerewolf.GetBool();
        public static float SheriffKillCd => Generate.SheriffKillCd.GetFloat();
        public static bool SwapperButton => Generate.SwapperButton.GetBool();
        public static float FootprintSize => Generate.FootprintSize.GetFloat();
        public static float FootprintInterval => Generate.FootprintInterval.GetFloat();
        public static float FootprintDuration => Generate.FootprintDuration.GetFloat();
        public static bool AnonymousFootPrint => Generate.AnonymousFootPrint.GetBool();
        public static bool VentFootprintVisible => Generate.VentFootprintVisible.GetBool();
        public static bool JesterButton => Generate.JesterButton.GetBool();
        public static bool JesterVent => Generate.JesterVent.GetBool();
        public static bool JesterImpVision => Generate.JesterImpVision.GetBool();
        public static ShieldOptions ShowShielded => (ShieldOptions)Generate.ShowShielded.Get();
        public static NotificationOptions NotificationShield => (NotificationOptions)Generate.WhoGetsNotification.Get();
        public static bool ShieldBreaks => Generate.ShieldBreaks.GetBool();
        public static float MedicReportNameDuration => Generate.MedicReportNameDuration.GetFloat();
        public static float MedicReportColorDuration => Generate.MedicReportColorDuration.GetFloat();
        public static bool ShowReports => Generate.MedicReportSwitch.GetBool();
        public static float SeerCd => Generate.SeerCooldown.GetFloat();
        public static bool CrewKillingRed => Generate.CrewKillingRed.GetBool();
        public static bool NeutBenignRed => Generate.NeutBenignRed.GetBool();
        public static bool NeutEvilRed => Generate.NeutEvilRed.GetBool();
        public static bool NeutKillingRed => Generate.NeutKillingRed.GetBool();
        public static bool TraitorColourSwap => Generate.TraitorColourSwap.GetBool();
        public static float MimicCooldown => Generate.MimicCooldownOption.GetFloat();
        public static float MimicDuration => Generate.MimicDurationOption.GetFloat();
        public static float HackCooldown => Generate.HackCooldownOption.GetFloat();
        public static float HackDuration => Generate.HackDurationOption.GetFloat();
        public static float GlitchKillCooldown => Generate.GlitchKillCooldownOption.GetFloat();
        public static int GlitchHackDistance => Generate.GlitchHackDistanceOption.Get();
        public static bool GlitchVent => Generate.GlitchVent.GetBool();
        public static float JuggKCd => Generate.JuggKillCooldown.GetFloat();
        public static float ReducedKCdPerKill => Generate.ReducedKCdPerKill.GetFloat();
        public static bool JuggVent => Generate.JuggVent.GetBool();
        public static float MorphlingCd => Generate.MorphlingCooldown.GetFloat();
        public static float MorphlingDuration => Generate.MorphlingDuration.GetFloat();
        public static bool MorphlingVent => Generate.MorphlingVent.GetBool();
        public static bool ColourblindComms => Generate.ColourblindComms.GetBool();
        public static OnTargetDead OnTargetDead => (OnTargetDead)Generate.OnTargetDead.Get();
        public static bool ExecutionerButton => Generate.ExecutionerButton.GetBool();
        public static bool SnitchSeesNeutrals => Generate.SnitchSeesNeutrals.GetBool();
        public static int SnitchTasksRemaining => Mathf.RoundToInt(Generate.SnitchTasksRemaining.GetFloat());
        public static bool SnitchSeesImpInMeeting => Generate.SnitchSeesImpInMeeting.GetBool();
        public static bool SnitchSeesTraitor => Generate.SnitchSeesTraitor.GetBool();
        public static float MineCd => Generate.MineCooldown.GetFloat();
        public static float SwoopCd => Generate.SwoopCooldown.GetFloat();
        public static float SwoopDuration => Generate.SwoopDuration.GetFloat();
        public static bool SwooperVent => Generate.SwooperVent.GetBool();
        public static bool ImpostorSeeRoles => Generate.ImpostorSeeRoles.GetBool();
        public static bool DeadSeeRoles => Generate.DeadSeeRoles.GetBool();
        public static bool HiddenRoles => Generate.HiddenRoles.GetBool();
        public static bool FirstDeathShield => Generate.FirstDeathShield.GetBool();
        public static bool SeeTasksDuringRound => Generate.SeeTasksDuringRound.GetBool();
        public static bool SeeTasksDuringMeeting => Generate.SeeTasksDuringMeeting.GetBool();
        public static bool SeeTasksWhenDead => Generate.SeeTasksWhenDead.GetBool();
        public static float DouseCd => Generate.DouseCooldown.GetFloat();
        public static int MaxDoused => Mathf.RoundToInt(Generate.MaxDoused.GetFloat());
        public static bool ArsoImpVision => Generate.ArsoImpVision.GetBool();
        public static bool IgniteCdRemoved => Generate.IgniteCdRemoved.GetBool();
        public static int MinNeutralBenignRoles => Mathf.RoundToInt(Generate.MinNeutralBenignRoles.GetFloat());
        public static int MaxNeutralBenignRoles => Mathf.RoundToInt(Generate.MaxNeutralBenignRoles.GetFloat());
        public static int MinNeutralEvilRoles => Mathf.RoundToInt(Generate.MinNeutralEvilRoles.GetFloat());
        public static int MaxNeutralEvilRoles => Mathf.RoundToInt(Generate.MaxNeutralEvilRoles.GetFloat());
        public static int MinNeutralKillingRoles => Mathf.RoundToInt(Generate.MinNeutralKillingRoles.GetFloat());
        public static int MaxNeutralKillingRoles => Mathf.RoundToInt(Generate.MaxNeutralKillingRoles.GetFloat());
        public static bool RandomNumberImps => Generate.RandomNumberImps.GetBool();
        public static int NeutralRoles => Mathf.RoundToInt(Generate.NeutralRoles.GetFloat());
        public static int VeteranCount => Mathf.RoundToInt(Generate.VeteranCount.GetFloat());
        public static int VigilanteCount => Mathf.RoundToInt(Generate.VigilanteCount.GetFloat());
        public static bool AddArsonist => Generate.AddArsonist.GetBool();
        public static bool AddPlaguebearer => Generate.AddPlaguebearer.GetBool();
        public static bool ParallelMedScans => Generate.ParallelMedScans.GetBool();
        public static int MaxFixes => Mathf.RoundToInt(Generate.MaxFixes.GetFloat());
        public static float ReviveDuration => Generate.ReviveDuration.GetFloat();
        public static bool AltruistTargetBody => Generate.AltruistTargetBody.GetBool();
        public static bool SheriffBodyReport => Generate.SheriffBodyReport.GetBool();
        public static float DragCd => Generate.DragCooldown.GetFloat();
        public static float UndertakerDragSpeed => Generate.UndertakerDragSpeed.GetFloat();
        public static bool UndertakerVent => Generate.UndertakerVent.GetBool();
        public static bool UndertakerVentWithBody => Generate.UndertakerVentWithBody.GetBool();
        public static bool AssassinGuessNeutralBenign => Generate.AssassinGuessNeutralBenign.GetBool();
        public static bool AssassinGuessNeutralEvil => Generate.AssassinGuessNeutralEvil.GetBool();
        public static bool AssassinGuessNeutralKilling => Generate.AssassinGuessNeutralKilling.GetBool();
        public static bool AssassinGuessImpostors => Generate.AssassinGuessImpostors.GetBool();
        public static bool AssassinGuessModifiers => Generate.AssassinGuessModifiers.GetBool();
        public static bool AssassinGuessLovers => Generate.AssassinGuessLovers.GetBool();
        public static bool AssassinCrewmateGuess => Generate.AssassinCrewmateGuess.GetBool();
        public static int AssassinKills => Mathf.RoundToInt(Generate.AssassinKills.GetFloat());
        public static int NumberOfImpostorAssassins => Mathf.RoundToInt(Generate.NumberOfImpostorAssassins.GetFloat());
        public static int NumberOfNeutralAssassins => Mathf.RoundToInt(Generate.NumberOfNeutralAssassins.GetFloat());
        public static bool AmneTurnImpAssassin => Generate.AmneTurnImpAssassin.GetBool();
        public static bool AmneTurnNeutAssassin => Generate.AmneTurnNeutAssassin.GetBool();
        public static bool TraitorCanAssassin => Generate.TraitorCanAssassin.GetBool();
        public static bool AssassinMultiKill => Generate.AssassinMultiKill.GetBool();
        public static float UnderdogKillBonus => Generate.UnderdogKillBonus.GetFloat();
        public static bool UnderdogIncreasedKC => Generate.UnderdogIncreasedKC.GetBool();
        public static int PhantomTasksRemaining => Mathf.RoundToInt(Generate.PhantomTasksRemaining.GetFloat());
        public static bool VigilanteGuessNeutralBenign => Generate.VigilanteGuessNeutralBenign.GetBool();
        public static bool VigilanteGuessNeutralEvil => Generate.VigilanteGuessNeutralEvil.GetBool();
        public static bool VigilanteGuessNeutralKilling => Generate.VigilanteGuessNeutralKilling.GetBool();
        public static bool VigilanteGuessLovers => Generate.VigilanteGuessLovers.GetBool();
        public static int VigilanteKills => Mathf.RoundToInt(Generate.VigilanteKills.GetFloat());
        public static bool VigilanteMultiKill => Generate.VigilanteMultiKill.GetBool();
        public static int HaunterTasksRemainingClicked => Mathf.RoundToInt(Generate.HaunterTasksRemainingClicked.GetFloat());
        public static int HaunterTasksRemainingAlert => Mathf.RoundToInt(Generate.HaunterTasksRemainingAlert.GetFloat());
        public static bool HaunterRevealsNeutrals => Generate.HaunterRevealsNeutrals.GetBool();
        public static HaunterCanBeClickedBy HaunterCanBeClickedBy => (HaunterCanBeClickedBy)Generate.HaunterCanBeClickedBy.Get();
        public static float GrenadeCd => Generate.GrenadeCooldown.GetFloat();
        public static float GrenadeDuration => Generate.GrenadeDuration.GetFloat();
        public static bool GrenadierIndicators => Generate.GrenadierIndicators.GetBool();
        public static bool GrenadierVent => Generate.GrenadierVent.GetBool();
        public static float FlashRadius => Generate.FlashRadius.GetFloat();
        public static int LovingImpPercent => Mathf.RoundToInt(Generate.LovingImpPercent.GetFloat());
        public static bool KilledOnAlert => Generate.KilledOnAlert.GetBool();
        public static float AlertCd => Generate.AlertCooldown.GetFloat();
        public static float AlertDuration => Generate.AlertDuration.GetFloat();
        public static int MaxAlerts => Mathf.RoundToInt(Generate.MaxAlerts.GetFloat());
        public static float UpdateInterval => Generate.UpdateInterval.GetFloat();
        public static float TrackCd => Generate.TrackCooldown.GetFloat();
        public static bool ResetOnNewRound => Generate.ResetOnNewRound.GetBool();
        public static int MaxTracks => Mathf.RoundToInt(Generate.MaxTracks.GetFloat());
        public static int LatestSpawn => Mathf.RoundToInt(Generate.LatestSpawn.GetFloat());
        public static bool NeutralKillingStopsTraitor => Generate.NeutralKillingStopsTraitor.GetBool();
        public static float TransportCooldown => Generate.TransportCooldown.GetFloat();
        public static int TransportMaxUses => Mathf.RoundToInt(Generate.TransportMaxUses.GetFloat());
        public static bool TransporterVitals => Generate.TransporterVitals.GetBool();
        public static bool RememberArrows => Generate.RememberArrows.GetBool();
        public static float RememberArrowDelay => Generate.RememberArrowDelay.GetFloat();
        public static float MediateCooldown => Generate.MediateCooldown.GetFloat();
        public static bool ShowMediatePlayer => Generate.ShowMediatePlayer.GetBool();
        public static bool ShowMediumToDead => Generate.ShowMediumToDead.GetBool();
        public static DeadRevealed DeadRevealed => (DeadRevealed)Generate.DeadRevealed.Get();
        public static float VestCd => Generate.VestCd.GetFloat();
        public static float VestDuration => Generate.VestDuration.GetFloat();
        public static float VestKCReset => Generate.VestKCReset.GetFloat();
        public static int MaxVests => Mathf.RoundToInt(Generate.MaxVests.GetFloat());
        public static float ProtectCd => Generate.ProtectCd.GetFloat();
        public static float ProtectDuration => Generate.ProtectDuration.GetFloat();
        public static float ProtectKCReset => Generate.ProtectKCReset.GetFloat();
        public static int MaxProtects => Mathf.RoundToInt(Generate.MaxProtects.GetFloat());
        public static ProtectOptions ShowProtect => (ProtectOptions)Generate.ShowProtect.Get();
        public static BecomeOptions GaOnTargetDeath => (BecomeOptions)Generate.GaOnTargetDeath.Get();
        public static bool GATargetKnows => Generate.GATargetKnows.GetBool();
        public static bool GAKnowsTargetRole => Generate.GAKnowsTargetRole.GetBool();
        public static int EvilTargetPercent => Mathf.RoundToInt(Generate.EvilTargetPercent.GetFloat());
        public static float MysticArrowDuration => Generate.MysticArrowDuration.GetFloat();
        public static float BlackmailCd => Generate.BlackmailCooldown.GetFloat();
        public static float GiantSlow => Generate.GiantSlow.GetFloat();
        public static float FlashSpeed => Generate.FlashSpeed.GetFloat();
        public static float DiseasedMultiplier => Generate.DiseasedKillMultiplier.GetFloat();
        public static float BaitMinDelay => Generate.BaitMinDelay.GetFloat();
        public static float BaitMaxDelay => Generate.BaitMaxDelay.GetFloat();
        public static float InfectCd => Generate.InfectCooldown.GetFloat();
        public static float PestKillCd => Generate.PestKillCooldown.GetFloat();
        public static bool PestVent => Generate.PestVent.GetBool();
        public static float RampageCd => Generate.RampageCooldown.GetFloat();
        public static float RampageDuration => Generate.RampageDuration.GetFloat();
        public static float RampageKillCd => Generate.RampageKillCooldown.GetFloat();
        public static bool WerewolfVent => Generate.WerewolfVent.GetBool();
        public static float TrapCooldown => Generate.TrapCooldown.GetFloat();
        public static bool TrapsRemoveOnNewRound => Generate.TrapsRemoveOnNewRound.GetBool();
        public static int MaxTraps => Mathf.RoundToInt(Generate.MaxTraps.GetFloat());
        public static float MinAmountOfTimeInTrap => Generate.MinAmountOfTimeInTrap.GetFloat();
        public static float TrapSize => Generate.TrapSize.GetFloat();
        public static int MinAmountOfPlayersInTrap => Mathf.RoundToInt(Generate.MinAmountOfPlayersInTrap.GetFloat());
        public static float ExamineCd => Generate.ExamineCooldown.GetFloat();
        public static bool DetectiveReportOn => Generate.DetectiveReportOn.GetBool();
        public static float DetectiveRoleDuration => Generate.DetectiveRoleDuration.GetFloat();
        public static float DetectiveFactionDuration => Generate.DetectiveFactionDuration.GetFloat();
        public static bool CanDetectLastKiller => Generate.CanDetectLastKiller.GetBool();
        public static float EscapeCd => Generate.EscapeCooldown.GetFloat();
        public static bool EscapistVent => Generate.EscapistVent.GetBool();
        public static float DetonateDelay => Generate.DetonateDelay.GetFloat();
        public static int MaxKillsInDetonation => Mathf.RoundToInt(Generate.MaxKillsInDetonation.GetFloat());
        public static float DetonateRadius => Generate.DetonateRadius.GetFloat();
        public static bool BomberVent => Generate.BomberVent.GetBool();
        public static float ObserveCooldown => Generate.ObserveCooldown.GetFloat();
        public static bool DoomsayerGuessNeutralBenign => Generate.DoomsayerGuessNeutralBenign.GetBool();
        public static bool DoomsayerGuessNeutralEvil => Generate.DoomsayerGuessNeutralEvil.GetBool();
        public static bool DoomsayerGuessNeutralKilling => Generate.DoomsayerGuessNeutralKilling.GetBool();
        public static bool DoomsayerGuessImpostors => Generate.DoomsayerGuessImpostors.GetBool();
        public static int DoomsayerGuessesToWin => Mathf.RoundToInt(Generate.DoomsayerGuessesToWin.GetFloat());
        public static float BiteCd => Generate.BiteCooldown.GetFloat();
        public static bool VampImpVision => Generate.VampImpVision.GetBool();
        public static bool VampVent => Generate.VampVent.GetBool();
        public static bool NewVampCanAssassin => Generate.NewVampCanAssassin.GetBool();
        public static int MaxVampiresPerGame => Mathf.RoundToInt(Generate.MaxVampiresPerGame.GetFloat());
        public static bool CanBiteNeutralBenign => Generate.CanBiteNeutralBenign.GetBool();
        public static bool CanBiteNeutralEvil => Generate.CanBiteNeutralEvil.GetBool();
        public static float StakeCd => Generate.StakeCooldown.GetFloat();
        public static int MaxFailedStakesPerGame => Mathf.RoundToInt(Generate.MaxFailedStakesPerGame.GetFloat());
        public static bool CanStakeRoundOne => Generate.CanStakeRoundOne.GetBool();
        public static bool SelfKillAfterFinalStake => Generate.SelfKillAfterFinalStake.GetBool();
        public static BecomeEnum BecomeOnVampDeaths => (BecomeEnum)Generate.BecomeOnVampDeaths.Get();
        public static bool ProsDiesOnIncorrectPros => Generate.ProsDiesOnIncorrectPros.GetBool();
        public static float ChargeUpDuration => Generate.ChargeUpDuration.GetFloat();
        public static float ChargeUseDuration => Generate.ChargeUseDuration.GetFloat();
        public static float ConfessCd => Generate.ConfessCooldown.GetFloat();
        public static float RevealAccuracy => Generate.RevealAccuracy.GetFloat();
        public static bool NeutralBenignShowsEvil => Generate.NeutralBenignShowsEvil.GetBool();
        public static bool NeutralEvilShowsEvil => Generate.NeutralEvilShowsEvil.GetBool();
        public static bool NeutralKillingShowsEvil => Generate.NeutralKillingShowsEvil.GetBool();
        public static float AbilityCd => Generate.AbilityCooldown.GetFloat();
        public static float AbilityDuration => Generate.AbilityDuration.GetFloat();
        public static float SprintSpeed => Generate.SprintSpeed.GetFloat();
        public static float FreezeSpeed => Generate.FreezeSpeed.GetFloat();
        public static float ChillDuration => Generate.ChillDuration.GetFloat();
        public static float ChillStartSpeed => Generate.ChillStartSpeed.GetFloat();
        public static float RadiateRange => Generate.RadiateRange.GetFloat();
        public static float RadiateCooldown => Generate.RadiateCooldown.GetFloat();
        public static float RadiateInvis => Generate.RadiateInvis.GetFloat();
        public static int RadiateCount => Mathf.RoundToInt(Generate.RadiateCount.GetFloat());
        public static int RadiateChance => Mathf.RoundToInt(Generate.RadiateSucceedChance.GetFloat());
        public static AdminDeadPlayers WhoSeesDead => (AdminDeadPlayers)Generate.WhoSeesDead.Get();
        public static bool VentImprovements => Generate.VentImprovements.GetBool();
        public static bool VitalsLab => Generate.VitalsLab.GetBool();
        public static bool ColdTempDeathValley => Generate.ColdTempDeathValley.GetBool();
        public static bool WifiChartCourseSwap => Generate.WifiChartCourseSwap.GetBool();
        public static bool RandomMapEnabled => Generate.RandomMapEnabled.GetBool();
        public static float RandomMapSkeld => Generate.RandomMapSkeld.GetFloat();
        public static float RandomMapMira => Generate.RandomMapMira.GetFloat();
        public static float RandomMapPolus => Generate.RandomMapPolus.GetFloat();
        public static float RandomMapAirship => Generate.RandomMapAirship.GetFloat();
        public static float RandomMapFungle => Generate.RandomMapFungle.GetFloat();
        public static float RandomMapSubmerged => Patches.SubmergedCompatibility.Loaded ? Generate.RandomMapSubmerged.GetFloat() : 0f;
        public static bool AutoAdjustSettings => Generate.AutoAdjustSettings.GetBool();
        public static bool SmallMapHalfVision => Generate.SmallMapHalfVision.GetBool();
        public static float SmallMapDecreasedCooldown => Generate.SmallMapDecreasedCooldown.GetFloat();
        public static float LargeMapIncreasedCooldown => Generate.LargeMapIncreasedCooldown.GetFloat();
        public static int SmallMapIncreasedShortTasks => Mathf.RoundToInt(Generate.SmallMapIncreasedShortTasks.GetFloat());
        public static int SmallMapIncreasedLongTasks => Mathf.RoundToInt(Generate.SmallMapIncreasedLongTasks.GetFloat());
        public static int LargeMapDecreasedShortTasks => Mathf.RoundToInt(Generate.LargeMapDecreasedShortTasks.GetFloat());
        public static int LargeMapDecreasedLongTasks => Mathf.RoundToInt(Generate.LargeMapDecreasedLongTasks.GetFloat());
        public static DisableSkipButtonMeetings SkipButtonDisable => (DisableSkipButtonMeetings)Generate.SkipButtonDisable.Get();
        public static GameMode GameMode => (GameMode)Generate.GameMode.Get();
        public static int MayorCultistOn => Mathf.RoundToInt(Generate.MayorCultistOn.GetFloat());
        public static int SeerCultistOn => Mathf.RoundToInt(Generate.SeerCultistOn.GetFloat());
        public static int SheriffCultistOn => Mathf.RoundToInt(Generate.SheriffCultistOn.GetFloat());
        public static int SurvivorCultistOn => Mathf.RoundToInt(Generate.SurvivorCultistOn.GetFloat());
        public static int SpecialRoleCount => Mathf.RoundToInt(Generate.NumberOfSpecialRoles.GetFloat());
        public static int MaxChameleons => Mathf.RoundToInt(Generate.MaxChameleons.GetFloat());
        public static int MaxEngineers => Mathf.RoundToInt(Generate.MaxEngineers.GetFloat());
        public static int MaxInvestigators => Mathf.RoundToInt(Generate.MaxInvestigators.GetFloat());
        public static int MaxMystics => Mathf.RoundToInt(Generate.MaxMystics.GetFloat());
        public static int MaxSnitches => Mathf.RoundToInt(Generate.MaxSnitches.GetFloat());
        public static int MaxSpies => Mathf.RoundToInt(Generate.MaxSpies.GetFloat());
        public static int MaxTransporters => Mathf.RoundToInt(Generate.MaxTransporters.GetFloat());
        public static int MaxVigilantes => Mathf.RoundToInt(Generate.MaxVigilantes.GetFloat());
        public static float WhisperCooldown => Generate.WhisperCooldown.GetFloat();
        public static float IncreasedCooldownPerWhisper => Generate.IncreasedCooldownPerWhisper.GetFloat();
        public static float WhisperRadius => Generate.WhisperRadius.GetFloat();
        public static int ConversionPercentage => Mathf.RoundToInt(Generate.ConversionPercentage.GetFloat());
        public static int DecreasedPercentagePerConversion => Mathf.RoundToInt(Generate.DecreasedPercentagePerConversion.GetFloat());
        public static float ReviveCooldown => Generate.ReviveCooldown.GetFloat();
        public static float IncreasedCooldownPerRevive => Generate.IncreasedCooldownPerRevive.GetFloat();
        public static int MaxReveals => Mathf.RoundToInt(Generate.MaxReveals.GetFloat());
        public static bool BlockGameEnd => Generate.BlockGameEnd.GetBool();
        public static bool SheriffBlockGameEnd => Generate.SheriffBlockGameEnd.GetBool();
        public static bool VeteranBlockGameEnd => Generate.VeteranBlockGameEnd.GetBool();
        public static bool MayorBlockGameEnd => Generate.MayorBlockGameEnd.GetBool();
        public static bool SwapperBlockGameEnd => Generate.SwapperBlockGameEnd.GetBool();
        public static bool TiebreakerBlockGameEnd => Generate.TiebreakerBlockGameEnd.GetBool();
    }
}